{"ast":null,"code":"var _jsxFileName = \"/Users/angel/Desktop/react-netflix-clone/src/components/Banner.js\",\n  _s = $RefreshSig$();\nimport axios from '../api/axios';\nimport React, { useEffect, useState } from 'react';\nimport requests from '../api/requests';\nimport \"./Banner.css\";\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Banner() {\n  _s();\n  const [movie, setMovie] = useState([]);\n  const [isClicked, setIsClicked] = useState(false);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    // 현재 상영중인 영화 정보를 가져오기(여러 영화)\n    const request = await axios.get(requests.fetchNowPlaying);\n    // 여러 영화 중 영화 하나의 ID를 가져오기\n    const movieID = request.data.results[Math.floor(Math.random() * request.data.results.length)].id;\n\n    // 특정 영화의 더 상세한 정보를 가져오기(비디오 정보도 포함)\n    const {\n      data: movieDetail\n    } = await axios.get(`movie/${movieID}`, {\n      params: {\n        append_to_responce: \"video\"\n      }\n    });\n    setMovie(movieDetail);\n  };\n  const truncate = (str, n) => {\n    return (str === null || str === void 0 ? void 0 : str.length) > n ? str.substr(0, n - 1) + \"...\" : str;\n  };\n  if (!isClicked) {\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"banner\",\n      style: {\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie.backdrop_path}\")`,\n        backgroundPosition: \"top center\",\n        backgroundSize: \"cover\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner__contents\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"banner__title\",\n          children: movie.title || movie.name || movie.original_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"banner__buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"banner__button play\",\n            onClick: () => setIsClicked(true),\n            children: \"play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"banner__button info\",\n            children: \"More Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"banner__description\",\n          children: truncate(movie.overview, 100)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner--fadeBottom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(Banner, \"R9stJPTA5NGL+iZVozDaQaKtmNg=\");\n_c = Banner;\nconst Container = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    width: 100%;\n    \n\n`;\nvar _c;\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["axios","React","useEffect","useState","requests","styled","jsxDEV","_jsxDEV","Banner","_s","movie","setMovie","isClicked","setIsClicked","fetchData","request","get","fetchNowPlaying","movieID","data","results","Math","floor","random","length","id","movieDetail","params","append_to_responce","truncate","str","n","substr","className","style","backgroundImage","backdrop_path","backgroundPosition","backgroundSize","children","title","name","original_name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","overview","_c","Container","div","$RefreshReg$"],"sources":["/Users/angel/Desktop/react-netflix-clone/src/components/Banner.js"],"sourcesContent":["import axios from '../api/axios';\nimport React, { useEffect, useState } from 'react'\nimport requests from '../api/requests';\nimport \"./Banner.css\"\nimport styled from 'styled-components';\n\nexport default function Banner() {\n    const [movie, setMovie] = useState([]);\n    const [isClicked, setIsClicked] = useState(false);\n\n    useEffect(() => {\n        fetchData();\n    }, [])\n\n    const fetchData = async () => {\n    // 현재 상영중인 영화 정보를 가져오기(여러 영화)\n    const request = await axios.get(requests.fetchNowPlaying);\n    // 여러 영화 중 영화 하나의 ID를 가져오기\n    const movieID = request.data.results[\n        Math.floor(Math.random() * request.data.results.length)\n    ].id;\n\n    // 특정 영화의 더 상세한 정보를 가져오기(비디오 정보도 포함)\n    const {data: movieDetail} = await axios.get(`movie/${movieID}`, {\n        params: {append_to_responce : \"video\"},\n    });\n    setMovie(movieDetail);\n    };\n\n    const truncate = (str, n) => {\n        return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\n    }\n    if(!isClicked) {\n\n        return (\n          <header\n          className='banner'\n          style={{\n              backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie.backdrop_path}\")`,\n              backgroundPosition: \"top center\",\n              backgroundSize: \"cover\"\n          }}\n          >\n              <div className='banner__contents'>\n                  <h1 className='banner__title'>{movie.title || movie.name || movie.original_name}</h1>\n                  \n                  <div className='banner__buttons'>\n                      <button\n                      className='banner__button play'\n                      onClick={() => setIsClicked(true)}>\n                          play\n                      </button>\n                      <button\n                      className='banner__button info'>\n                          More Information\n                      </button>\n                  </div>\n      \n                  <h1 className='banner__description'>{truncate(movie.overview, 100)}</h1>\n              </div>\n              <div className='banner--fadeBottom' />\n      \n          </header>\n        )\n    } else {\n        return (\n            <div>\n                click\n            </div>\n        )\n    }\n}\n\nconst Container = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    width: 100%;\n    \n\n`"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}