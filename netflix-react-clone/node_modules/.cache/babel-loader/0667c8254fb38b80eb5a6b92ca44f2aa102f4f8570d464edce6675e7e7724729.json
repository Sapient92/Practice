{"ast":null,"code":"var _jsxFileName = \"/Users/angel/Desktop/react-netflix-clone/src/components/Banner.js\",\n  _s = $RefreshSig$();\nimport axios from '../api/axios';\nimport React, { useEffect, useState } from 'react';\nimport requests from '../api/requests';\nimport \"./Banner.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Banner() {\n  _s();\n  const [movie, setMovie] = useState([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    // 현재 상영중인 영화 정보를 가져오기(여러 영화)\n    const request = await axios.get(requests.fetchNowPlaying);\n    // 여러 영화 중 영화 하나의 ID를 가져오기\n    const movieID = request.data.results[Math.floor(Math.random() * request.data.results.length)].id;\n\n    // 특정 영화의 더 상세한 정보를 가져오기(비디오 정보도 포함)\n    const {\n      data: movieDetail\n    } = await axios.get(`movie/${movieID}`, {\n      params: {\n        append_to_responce: \"video\"\n      }\n    });\n    setMovie(movieDetail);\n  };\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"banner\",\n    style: {\n      backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie.backdrop_path}\")`,\n      backgroundPosition: \"top center\",\n      backgroundSize: \"cover\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner__contents\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"banner__title\",\n        children: movie.title || movie.name || movie.original_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner__buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"banner__button play\",\n          children: \"play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"banner__button info\",\n          children: \"More Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"banner__description\",\n        children: truncatemovie.overview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner--fadeBottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Banner, \"jmRb9xsBKsoKCGHCjtfP3JDQESc=\");\n_c = Banner;\nvar _c;\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["axios","React","useEffect","useState","requests","jsxDEV","_jsxDEV","Banner","_s","movie","setMovie","fetchData","request","get","fetchNowPlaying","movieID","data","results","Math","floor","random","length","id","movieDetail","params","append_to_responce","className","style","backgroundImage","backdrop_path","backgroundPosition","backgroundSize","children","title","name","original_name","fileName","_jsxFileName","lineNumber","columnNumber","truncatemovie","overview","_c","$RefreshReg$"],"sources":["/Users/angel/Desktop/react-netflix-clone/src/components/Banner.js"],"sourcesContent":["import axios from '../api/axios';\nimport React, { useEffect, useState } from 'react'\nimport requests from '../api/requests';\nimport \"./Banner.css\"\n\nexport default function Banner() {\n    const [movie, setMovie] = useState([]);\n    \n    useEffect(() => {\n        fetchData();\n    }, [])\n\n    const fetchData = async () => {\n    // 현재 상영중인 영화 정보를 가져오기(여러 영화)\n    const request = await axios.get(requests.fetchNowPlaying);\n    // 여러 영화 중 영화 하나의 ID를 가져오기\n    const movieID = request.data.results[\n        Math.floor(Math.random() * request.data.results.length)\n    ].id;\n\n    // 특정 영화의 더 상세한 정보를 가져오기(비디오 정보도 포함)\n    const {data: movieDetail} = await axios.get(`movie/${movieID}`, {\n        params: {append_to_responce : \"video\"},\n    });\n    setMovie(movieDetail);\n    };\n    \n  return (\n    <header\n    className='banner'\n    style={{\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie.backdrop_path}\")`,\n        backgroundPosition: \"top center\",\n        backgroundSize: \"cover\"\n    }}\n    >\n        <div className='banner__contents'>\n            <h1 className='banner__title'>{movie.title || movie.name || movie.original_name}</h1>\n            \n            <div className='banner__buttons'>\n                <button\n                className='banner__button play'>\n                    play\n                </button>\n                <button\n                className='banner__button info'>\n                    More Information\n                </button>\n            </div>\n\n            <h1 className='banner__description'>{truncatemovie.overview}</h1>\n        </div>\n        <div className='banner--fadeBottom' />\n\n    </header>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,cAAc;AAChC,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,OAAO,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErB,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZS,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC9B;IACA,MAAMC,OAAO,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAACT,QAAQ,CAACU,eAAe,CAAC;IACzD;IACA,MAAMC,OAAO,GAAGH,OAAO,CAACI,IAAI,CAACC,OAAO,CAChCC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGR,OAAO,CAACI,IAAI,CAACC,OAAO,CAACI,MAAM,CAAC,CAC1D,CAACC,EAAE;;IAEJ;IACA,MAAM;MAACN,IAAI,EAAEO;IAAW,CAAC,GAAG,MAAMvB,KAAK,CAACa,GAAG,CAAE,SAAQE,OAAQ,EAAC,EAAE;MAC5DS,MAAM,EAAE;QAACC,kBAAkB,EAAG;MAAO;IACzC,CAAC,CAAC;IACFf,QAAQ,CAACa,WAAW,CAAC;EACrB,CAAC;EAEH,oBACEjB,OAAA;IACAoB,SAAS,EAAC,QAAQ;IAClBC,KAAK,EAAE;MACHC,eAAe,EAAG,4CAA2CnB,KAAK,CAACoB,aAAc,IAAG;MACpFC,kBAAkB,EAAE,YAAY;MAChCC,cAAc,EAAE;IACpB,CAAE;IAAAC,QAAA,gBAEE1B,OAAA;MAAKoB,SAAS,EAAC,kBAAkB;MAAAM,QAAA,gBAC7B1B,OAAA;QAAIoB,SAAS,EAAC,eAAe;QAAAM,QAAA,EAAEvB,KAAK,CAACwB,KAAK,IAAIxB,KAAK,CAACyB,IAAI,IAAIzB,KAAK,CAAC0B;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAErFjC,OAAA;QAAKoB,SAAS,EAAC,iBAAiB;QAAAM,QAAA,gBAC5B1B,OAAA;UACAoB,SAAS,EAAC,qBAAqB;UAAAM,QAAA,EAAC;QAEhC;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTjC,OAAA;UACAoB,SAAS,EAAC,qBAAqB;UAAAM,QAAA,EAAC;QAEhC;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eAENjC,OAAA;QAAIoB,SAAS,EAAC,qBAAqB;QAAAM,QAAA,EAAEQ,aAAa,CAACC;MAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC,eACNjC,OAAA;MAAKoB,SAAS,EAAC;IAAoB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAElC,CAAC;AAEb;AAAC/B,EAAA,CAnDuBD,MAAM;AAAAmC,EAAA,GAANnC,MAAM;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}