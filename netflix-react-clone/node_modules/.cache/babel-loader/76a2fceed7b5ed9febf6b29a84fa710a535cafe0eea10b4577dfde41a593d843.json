{"ast":null,"code":"var _jsxFileName = \"/Users/angel/Desktop/Practice/react-netflix-clone/src/components/Row.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from '../api/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Row({\n  title,\n  fetchUrl,\n  isLargeRow,\n  id\n}) {\n  _s();\n  const [Movies, setMovies] = useState([]);\n  useEffect(() => {\n    fetchMovieData();\n  }, [fetchUrl]);\n  const fetchMovieData = async () => {\n    const request = await axios.get(fetchUrl);\n    setMovies(request.data.results);\n    return request;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider__arrow-left\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"arrow\",\n          children: \"<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: id,\n        className: \"row__posters\",\n        children: Movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n          className: `row__poster ${isLargeRow && \"row__posterLarge\"}`\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n}\n_s(Row, \"EwYeuK14ZQb9g0eKZyr5SVIgFsY=\");\n_c = Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Row","title","fetchUrl","isLargeRow","id","_s","Movies","setMovies","fetchMovieData","request","get","data","results","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","_c","$RefreshReg$"],"sources":["/Users/angel/Desktop/Practice/react-netflix-clone/src/components/Row.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from '../api/axios';\n\nexport default function Row({ title, fetchUrl, isLargeRow, id }) {\n  const [Movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchMovieData();\n  },[fetchUrl]);\n\n  const fetchMovieData = async () => {\n    const request = await axios.get(fetchUrl);\n    setMovies(request.data.results);\n    return request;\n  }\n  \n  return <div>\n    <section className=\"\"></section>\n    {/* TITLE */}\n    <h2>{title}</h2>\n    <div className=\"slider\">\n      <div className=\"slider__arrow-left\">\n        <span className=\"arrow\">\n          {\"<\"}\n        </span>\n      </div>\n      <div id={id} className=\"row__posters\">\n        {/* SEVERAL ROW_POSTER */}\n        {Movies.map((movie) => (\n          <img key={movie.id} className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}/>\n        ))}\n      </div>\n\n    </div>\n  </div>;\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,GAAGA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,UAAU;EAAEC;AAAG,CAAC,EAAE;EAAAC,EAAA;EAC/D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACda,cAAc,CAAC,CAAC;EAClB,CAAC,EAAC,CAACN,QAAQ,CAAC,CAAC;EAEb,MAAMM,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,OAAO,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAACR,QAAQ,CAAC;IACzCK,SAAS,CAACE,OAAO,CAACE,IAAI,CAACC,OAAO,CAAC;IAC/B,OAAOH,OAAO;EAChB,CAAC;EAED,oBAAOV,OAAA;IAAAc,QAAA,gBACLd,OAAA;MAASe,SAAS,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC,eAEhCnB,OAAA;MAAAc,QAAA,EAAKZ;IAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBnB,OAAA;MAAKe,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACrBd,OAAA;QAAKe,SAAS,EAAC,oBAAoB;QAAAD,QAAA,eACjCd,OAAA;UAAMe,SAAS,EAAC,OAAO;UAAAD,QAAA,EACpB;QAAG;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACNnB,OAAA;QAAKK,EAAE,EAAEA,EAAG;QAACU,SAAS,EAAC,cAAc;QAAAD,QAAA,EAElCP,MAAM,CAACa,GAAG,CAAEC,KAAK,iBAChBrB,OAAA;UAAoBe,SAAS,EAAG,eAAcX,UAAU,IAAI,kBAAmB;QAAE,GAAvEiB,KAAK,CAAChB,EAAE;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgE,CACnF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AACR;AAACb,EAAA,CAhCuBL,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}