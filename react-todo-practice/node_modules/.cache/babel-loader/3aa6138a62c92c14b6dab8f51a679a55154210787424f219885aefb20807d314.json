{"ast":null,"code":"var _jsxFileName = \"/Users/angel/Desktop/react-todo-practice/src/Components/List.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = /*#__PURE__*/React.memo(_c = ({\n  id,\n  title,\n  completed,\n  todoData,\n  setTodoData,\n  provided,\n  snapshot,\n  handleClick\n}) => {\n  const handleCompleteChange = id => {\n    let newTodoData = todoData.map(data => {\n      if (data.id === id) {\n        data.completed = !data.completed;\n      }\n      return data;\n    });\n    setTodoData(newTodoData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ...provided.draggableProps,\n    ref: provided.innerRef,\n    ...provided.dragHandleProps,\n    className: `${snapshot.isDragging ? \"bg-gray-400\" : \"bg-gray-100\"} flex items-center justify-between w-full px-4 py-1 my-2 text-gray-600 bg-gray-100 border rounded`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: () => handleCompleteChange(id),\n        defaultChecked: completed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: completed ? \"line-through\" : undefined,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"items-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"float-right px-4 py-2\",\n          onClick: () => handleClick(id),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n});\n_c2 = List;\nexport default List;\nvar _c, _c2;\n$RefreshReg$(_c, \"List$React.memo\");\n$RefreshReg$(_c2, \"List\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","List","memo","_c","id","title","completed","todoData","setTodoData","provided","snapshot","handleClick","handleCompleteChange","newTodoData","map","data","draggableProps","ref","innerRef","dragHandleProps","className","isDragging","children","type","onChange","defaultChecked","fileName","_jsxFileName","lineNumber","columnNumber","undefined","onClick","_c2","$RefreshReg$"],"sources":["/Users/angel/Desktop/react-todo-practice/src/Components/List.js"],"sourcesContent":["import React from \"react\";\n\nconst List = React.memo(({\n  id,\n  title,\n  completed,\n  todoData,\n  setTodoData,\n  provided,\n  snapshot,\n  handleClick\n}) => {\n\n  const handleCompleteChange = (id) => {\n    let newTodoData = todoData.map((data) => {\n      if (data.id === id) {\n        data.completed = !data.completed;\n      }\n      return data;\n    });\n    setTodoData(newTodoData);\n  };\n  \n  return (\n    <div\n      key={id}\n      {...provided.draggableProps}\n      ref={provided.innerRef}\n      {...provided.dragHandleProps}\n      className={`${snapshot.isDragging ? \"bg-gray-400\" : \"bg-gray-100\"} flex items-center justify-between w-full px-4 py-1 my-2 text-gray-600 bg-gray-100 border rounded`}>\n      <div className=\"items-center\">\n        <input\n          type=\"checkbox\"\n          onChange={() => handleCompleteChange(id)}\n          defaultChecked={completed}\n        />\n        <span className={completed ? \"line-through\" : undefined}>{title}</span>\n        <div className=\"items-center\">\n          <button className=\"float-right px-4 py-2\" onClick={() => handleClick(id)}>x</button>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport default List;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,gBAAGH,KAAK,CAACI,IAAI,CAAAC,EAAA,GAACA,CAAC;EACvBC,EAAE;EACFC,KAAK;EACLC,SAAS;EACTC,QAAQ;EACRC,WAAW;EACXC,QAAQ;EACRC,QAAQ;EACRC;AACF,CAAC,KAAK;EAEJ,MAAMC,oBAAoB,GAAIR,EAAE,IAAK;IACnC,IAAIS,WAAW,GAAGN,QAAQ,CAACO,GAAG,CAAEC,IAAI,IAAK;MACvC,IAAIA,IAAI,CAACX,EAAE,KAAKA,EAAE,EAAE;QAClBW,IAAI,CAACT,SAAS,GAAG,CAACS,IAAI,CAACT,SAAS;MAClC;MACA,OAAOS,IAAI;IACb,CAAC,CAAC;IACFP,WAAW,CAACK,WAAW,CAAC;EAC1B,CAAC;EAED,oBACEb,OAAA;IAAA,GAEMS,QAAQ,CAACO,cAAc;IAC3BC,GAAG,EAAER,QAAQ,CAACS,QAAS;IAAA,GACnBT,QAAQ,CAACU,eAAe;IAC5BC,SAAS,EAAG,GAAEV,QAAQ,CAACW,UAAU,GAAG,aAAa,GAAG,aAAc,mGAAmG;IAAAC,QAAA,eACrKtB,OAAA;MAAKoB,SAAS,EAAC,cAAc;MAAAE,QAAA,gBAC3BtB,OAAA;QACEuB,IAAI,EAAC,UAAU;QACfC,QAAQ,EAAEA,CAAA,KAAMZ,oBAAoB,CAACR,EAAE,CAAE;QACzCqB,cAAc,EAAEnB;MAAU;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eACF7B,OAAA;QAAMoB,SAAS,EAAEd,SAAS,GAAG,cAAc,GAAGwB,SAAU;QAAAR,QAAA,EAAEjB;MAAK;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvE7B,OAAA;QAAKoB,SAAS,EAAC,cAAc;QAAAE,QAAA,eAC3BtB,OAAA;UAAQoB,SAAS,EAAC,uBAAuB;UAACW,OAAO,EAAEA,CAAA,KAAMpB,WAAW,CAACP,EAAE,CAAE;UAAAkB,QAAA,EAAC;QAAC;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,GAfDzB,EAAE;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAgBJ,CAAC;AAEV,CAAC,CAAC;AAACG,GAAA,GAzCG/B,IAAI;AA2CV,eAAeA,IAAI;AAAC,IAAAE,EAAA,EAAA6B,GAAA;AAAAC,YAAA,CAAA9B,EAAA;AAAA8B,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}